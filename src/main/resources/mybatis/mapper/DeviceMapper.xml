<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="at.along.com.dao.DeviceMapper">
    <resultMap id="BaseResultMap" type="at.along.com.entity.Device">
        <id column="device_id" jdbcType="VARCHAR" property="deviceId"/>
        <result column="device_name" jdbcType="VARCHAR" property="deviceName"/>
        <result column="product_id" jdbcType="VARCHAR" property="productId"/>
        <result column="last_online_time" jdbcType="TIMESTAMP" property="lastOnlineTime"/>
        <result column="device_authentication" jdbcType="VARCHAR" property="deviceAuthentication"/>
        <result column="device_introduction" jdbcType="VARCHAR" property="deviceIntroduction"/>
        <result column="device_api" jdbcType="VARCHAR" property="deviceApi"/>
        <result column="create_date" jdbcType="DATE" property="createDate"/>
        <result column="device_status" jdbcType="VARCHAR" property="deviceStatus"/>
        <result column="api_key" jdbcType="VARCHAR" property="apiKey"/>
    </resultMap>

    <sql id="ListColumn">
        device_id,device_name,product_id,last_online_time,device_authentication,device_introduction,device_api,create_date
    </sql>
    <insert id="insertAll" parameterType="at.along.com.entity.Device">
        insert into device(device_id,device_name,product_id,device_authentication,device_introduction,device_api) value
        (#{deviceId},#{deviceName},#{productId},#{deviceAuthentication},#{deviceIntroduction},#{deviceApi})
    </insert>
    <delete id="deleteByDeviceIdAndProductIdInt" parameterType="string">
        delete from device where product_id=#{productId} and device_id=#{deviceId}
    </delete>
    <delete id="deleteByProductId" parameterType="string">
        delete from `device` where product_id=#{productId}
    </delete>
    <select id="selectAllByProductId" parameterType="string" resultMap="BaseResultMap">
        select *
        from device where product_id=#{productId} order by create_date DESC
    </select>
    <select id="selectAllByProductIdInt" parameterType="string" resultType="java.lang.Integer">
        select count(*) from device where product_id=#{productId}
    </select>
    <select id="selectByDeviceId" resultMap="BaseResultMap">
        select device_id,last_online_time,device_status from device where device_id=#{deviceId} and product_id=#{productId}
    </select>
    <select id="selectByDeviceIdAanProductId" resultMap="BaseResultMap">
        select * from device where device_id=#{deviceId} and product_id=#{productId}
    </select>


    <update id="updateStatusUp" parameterType="string">
        update device set device_status='在线' where device_id=#{deviceId}
    </update>

    <update id="updateStatusDown" >
        update device set device_status='离线',last_online_time=#{lastOnlineTime} where device_id=#{deviceId}
    </update>
    <update id="updateAll">
        update device set device_name=#{deviceName},device_authentication=#{deviceAuthentication},device_introduction=#{deviceIntroduction} where product_id=#{productId} and device_id=#{deviceId}
    </update>

    <update id="addApiKey" parameterType="string">
        update device set api_key=#{apiKey} where product_id=#{productId} and device_id=#{deviceId}
    </update>

    <select id="getApiKey" resultMap="BaseResultMap">
        select api_key from device where device_id=#{deviceId}
    </select>
    <select id="selectDataByProductId" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT device_id) from (SELECT * FROM `device` WHERE to_days(`create_date`) = to_days(#{date})) as dd where #{productId}=product_id;
    </select>
    <select id="selectByStartAndEndAndProductId" resultType="java.lang.Integer">
        SELECT count(*) FROM (select * from `device` where create_date between #{start} and #{end}) as dd WHERE product_id=#{productId}
    </select>
    <select id="getProductId" resultMap="BaseResultMap">
        SELECT product_id from device where device_id=#{deviceId}
    </select>

</mapper>
